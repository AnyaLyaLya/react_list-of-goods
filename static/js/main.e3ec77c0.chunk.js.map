{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortingAlphabetically","setState","ALPHABET","handleSortingByLength","LENGTH","handleReversing","handleReseting","this","goods","visibleGoods","console","log","getReorderedGoods","sort","g1","g2","localeCompare","length","reverse","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,4BAA8B,WAC5B,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,sBAAwB,WACtB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,gBAAkB,WAChB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,eAAiB,WACf,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAtDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAMzB,OAFAE,QAAQC,IAAIb,EAAUD,GAEfY,EA2CSG,CAAkBlB,EAAiBa,KAAKX,OAiBtD,OAfAY,EAAMK,MAAK,SAACC,EAAIC,GACd,OAAQjB,GACN,KAAKL,EAASS,SACZ,OAAOY,EAAGE,cAAcD,GAC1B,KAAKtB,EAASW,OACZ,OAAOU,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITpB,GACFW,EAAMU,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAASf,KAAKP,4BANhB,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAASf,KAAKJ,sBANhB,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAfxB,IAEhByB,QAASf,KAAKF,gBANhB,sBAWEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,eAHhB,sBAUJ,6BACGE,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eApGpC,GAAyBC,IAAMC,WC/C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3ec77c0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortingAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortingByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReversing = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReseting = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    goods.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return g1.localeCompare(g2);\n        case SortType.LENGTH:\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handleSortingAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleSortingByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.handleReversing}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReseting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}